// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: serial.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Check struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value    string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"` // token
	Nonce    uint64 `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	From     string `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`         // user
	To       string `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`             // storage
	Op       string `protobuf:"bytes,6,opt,name=op,proto3" json:"op,omitempty"`             // operator
	Contract string `protobuf:"bytes,7,opt,name=contract,proto3" json:"contract,omitempty"` //运营合约地址
	ChkSig   []byte `protobuf:"bytes,8,opt,name=chkSig,proto3" json:"chkSig,omitempty"`
}

func (x *Check) Reset() {
	*x = Check{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serial_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Check) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Check) ProtoMessage() {}

func (x *Check) ProtoReflect() protoreflect.Message {
	mi := &file_serial_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Check.ProtoReflect.Descriptor instead.
func (*Check) Descriptor() ([]byte, []int) {
	return file_serial_proto_rawDescGZIP(), []int{0}
}

func (x *Check) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Check) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Check) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *Check) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Check) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Check) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

func (x *Check) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *Check) GetChkSig() []byte {
	if x != nil {
		return x.ChkSig
	}
	return nil
}

type PayCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Check       *Check `protobuf:"bytes,1,opt,name=check,proto3" json:"check,omitempty"`
	Payvalue    string `protobuf:"bytes,2,opt,name=payvalue,proto3" json:"payvalue,omitempty"`       //支付给存储节点的数额必须小于等于cheque.max_amount
	PayCheckSig []byte `protobuf:"bytes,3,opt,name=payCheckSig,proto3" json:"payCheckSig,omitempty"` //
}

func (x *PayCheck) Reset() {
	*x = PayCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serial_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayCheck) ProtoMessage() {}

func (x *PayCheck) ProtoReflect() protoreflect.Message {
	mi := &file_serial_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayCheck.ProtoReflect.Descriptor instead.
func (*PayCheck) Descriptor() ([]byte, []int) {
	return file_serial_proto_rawDescGZIP(), []int{1}
}

func (x *PayCheck) GetCheck() *Check {
	if x != nil {
		return x.Check
	}
	return nil
}

func (x *PayCheck) GetPayvalue() string {
	if x != nil {
		return x.Payvalue
	}
	return ""
}

func (x *PayCheck) GetPayCheckSig() []byte {
	if x != nil {
		return x.PayCheckSig
	}
	return nil
}

type SerializeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*PayCheck `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *SerializeData) Reset() {
	*x = SerializeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serial_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerializeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerializeData) ProtoMessage() {}

func (x *SerializeData) ProtoReflect() protoreflect.Message {
	mi := &file_serial_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerializeData.ProtoReflect.Descriptor instead.
func (*SerializeData) Descriptor() ([]byte, []int) {
	return file_serial_proto_rawDescGZIP(), []int{2}
}

func (x *SerializeData) GetData() []*PayCheck {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_serial_proto protoreflect.FileDescriptor

var file_serial_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x22, 0xb1, 0x01, 0x0a, 0x05, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x6f, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x68, 0x6b, 0x53, 0x69, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x63, 0x68, 0x6b, 0x53, 0x69, 0x67, 0x22, 0x69, 0x0a, 0x08, 0x50, 0x61, 0x79, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x12, 0x1f, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x05, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x69, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x69,
	0x67, 0x22, 0x31, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x20, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_serial_proto_rawDescOnce sync.Once
	file_serial_proto_rawDescData = file_serial_proto_rawDesc
)

func file_serial_proto_rawDescGZIP() []byte {
	file_serial_proto_rawDescOnce.Do(func() {
		file_serial_proto_rawDescData = protoimpl.X.CompressGZIP(file_serial_proto_rawDescData)
	})
	return file_serial_proto_rawDescData
}

var file_serial_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_serial_proto_goTypes = []interface{}{
	(*Check)(nil),         // 0: pb.Check
	(*PayCheck)(nil),      // 1: pb.PayCheck
	(*SerializeData)(nil), // 2: pb.SerializeData
}
var file_serial_proto_depIdxs = []int32{
	0, // 0: pb.PayCheck.check:type_name -> pb.Check
	1, // 1: pb.SerializeData.Data:type_name -> pb.PayCheck
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_serial_proto_init() }
func file_serial_proto_init() {
	if File_serial_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_serial_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Check); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serial_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serial_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SerializeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_serial_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_serial_proto_goTypes,
		DependencyIndexes: file_serial_proto_depIdxs,
		MessageInfos:      file_serial_proto_msgTypes,
	}.Build()
	File_serial_proto = out.File
	file_serial_proto_rawDesc = nil
	file_serial_proto_goTypes = nil
	file_serial_proto_depIdxs = nil
}
